/* tslint:disable */
/* eslint-disable */
/**
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  \'podman info\'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  \'podman pull quay.io/containers/podman\'  curl -XPOST --unix-socket /run/podman/podman.sock -v \'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman\'  \'podman list images\'  curl --unix-socket /run/podman/podman.sock -v \'http://d/v5.0.0/libpod/images/json\' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WeightDevice } from './WeightDevice';
import {
    WeightDeviceFromJSON,
    WeightDeviceFromJSONTyped,
    WeightDeviceToJSON,
} from './WeightDevice';
import type { PortBinding } from './PortBinding';
import {
    PortBindingFromJSON,
    PortBindingFromJSONTyped,
    PortBindingToJSON,
} from './PortBinding';
import type { ThrottleDevice } from './ThrottleDevice';
import {
    ThrottleDeviceFromJSON,
    ThrottleDeviceFromJSONTyped,
    ThrottleDeviceToJSON,
} from './ThrottleDevice';
import type { DeviceMapping } from './DeviceMapping';
import {
    DeviceMappingFromJSON,
    DeviceMappingFromJSONTyped,
    DeviceMappingToJSON,
} from './DeviceMapping';
import type { Mount } from './Mount';
import {
    MountFromJSON,
    MountFromJSONTyped,
    MountToJSON,
} from './Mount';
import type { Ulimit } from './Ulimit';
import {
    UlimitFromJSON,
    UlimitFromJSONTyped,
    UlimitToJSON,
} from './Ulimit';
import type { RestartPolicy } from './RestartPolicy';
import {
    RestartPolicyFromJSON,
    RestartPolicyFromJSONTyped,
    RestartPolicyToJSON,
} from './RestartPolicy';
import type { DeviceRequest } from './DeviceRequest';
import {
    DeviceRequestFromJSON,
    DeviceRequestFromJSONTyped,
    DeviceRequestToJSON,
} from './DeviceRequest';
import type { LogConfig } from './LogConfig';
import {
    LogConfigFromJSON,
    LogConfigFromJSONTyped,
    LogConfigToJSON,
} from './LogConfig';

/**
 * Here, "non-portable" means "dependent of the host we are running on".
 * Portable information *should* appear in Config.
 * @export
 * @interface HostConfig
 */
export interface HostConfig {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof HostConfig
     */
    annotations?: { [key: string]: string; };
    /**
     * 
     * @type {boolean}
     * @memberof HostConfig
     */
    autoRemove?: boolean;
    /**
     * Applicable to all platforms
     * @type {Array<string>}
     * @memberof HostConfig
     */
    binds?: Array<string>;
    /**
     * 
     * @type {Array<ThrottleDevice>}
     * @memberof HostConfig
     */
    blkioDeviceReadBps?: Array<ThrottleDevice>;
    /**
     * 
     * @type {Array<ThrottleDevice>}
     * @memberof HostConfig
     */
    blkioDeviceReadIOps?: Array<ThrottleDevice>;
    /**
     * 
     * @type {Array<ThrottleDevice>}
     * @memberof HostConfig
     */
    blkioDeviceWriteBps?: Array<ThrottleDevice>;
    /**
     * 
     * @type {Array<ThrottleDevice>}
     * @memberof HostConfig
     */
    blkioDeviceWriteIOps?: Array<ThrottleDevice>;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    blkioWeight?: number;
    /**
     * 
     * @type {Array<WeightDevice>}
     * @memberof HostConfig
     */
    blkioWeightDevice?: Array<WeightDevice>;
    /**
     * We need to override the json decoder to accept both options.
     * @type {Array<string>}
     * @memberof HostConfig
     */
    capAdd?: Array<string>;
    /**
     * We need to override the json decoder to accept both options.
     * @type {Array<string>}
     * @memberof HostConfig
     */
    capDrop?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    cgroup?: string;
    /**
     * Applicable to UNIX platforms
     * @type {string}
     * @memberof HostConfig
     */
    cgroupParent?: string;
    /**
     * CgroupnsMode represents the cgroup namespace mode of the container
     * @type {string}
     * @memberof HostConfig
     */
    cgroupnsMode?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof HostConfig
     */
    consoleSize?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    containerIDFile?: string;
    /**
     * Applicable to Windows
     * @type {number}
     * @memberof HostConfig
     */
    cpuCount?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    cpuPercent?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    cpuPeriod?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    cpuQuota?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    cpuRealtimePeriod?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    cpuRealtimeRuntime?: number;
    /**
     * Applicable to all platforms
     * @type {number}
     * @memberof HostConfig
     */
    cpuShares?: number;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    cpusetCpus?: string;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    cpusetMems?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    deviceCgroupRules?: Array<string>;
    /**
     * 
     * @type {Array<DeviceRequest>}
     * @memberof HostConfig
     */
    deviceRequests?: Array<DeviceRequest>;
    /**
     * 
     * @type {Array<DeviceMapping>}
     * @memberof HostConfig
     */
    devices?: Array<DeviceMapping>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    dns?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    dnsOptions?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    dnsSearch?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    extraHosts?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    groupAdd?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    iOMaximumBandwidth?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    iOMaximumIOps?: number;
    /**
     * Run a custom init inside the container, if null, use the daemon's configured settings
     * @type {boolean}
     * @memberof HostConfig
     */
    init?: boolean;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    ipcMode?: string;
    /**
     * Isolation represents the isolation technology of a container. The supported
     * values are platform specific
     * @type {string}
     * @memberof HostConfig
     */
    isolation?: string;
    /**
     * KernelMemory specifies the kernel memory limit (in bytes) for the container.
     * Deprecated: kernel 5.4 deprecated kmem.limit_in_bytes.
     * @type {number}
     * @memberof HostConfig
     */
    kernelMemory?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    kernelMemoryTCP?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    links?: Array<string>;
    /**
     * 
     * @type {LogConfig}
     * @memberof HostConfig
     */
    logConfig?: LogConfig;
    /**
     * MaskedPaths is the list of paths to be masked inside the container (this overrides the default set of paths)
     * @type {Array<string>}
     * @memberof HostConfig
     */
    maskedPaths?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    memory?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    memoryReservation?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    memorySwap?: number;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    memorySwappiness?: number;
    /**
     * Mounts specs used by the container
     * @type {Array<Mount>}
     * @memberof HostConfig
     */
    mounts?: Array<Mount>;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    nanoCpus?: number;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    networkMode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof HostConfig
     */
    oomKillDisable?: boolean;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    oomScoreAdj?: number;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    pidMode?: string;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    pidsLimit?: number;
    /**
     * PortMap is a collection of PortBinding indexed by Port
     * @type {{ [key: string]: Array<PortBinding>; }}
     * @memberof HostConfig
     */
    portBindings?: { [key: string]: Array<PortBinding>; };
    /**
     * 
     * @type {boolean}
     * @memberof HostConfig
     */
    privileged?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof HostConfig
     */
    publishAllPorts?: boolean;
    /**
     * ReadonlyPaths is the list of paths to be set as read-only inside the container (this overrides the default set of paths)
     * @type {Array<string>}
     * @memberof HostConfig
     */
    readonlyPaths?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof HostConfig
     */
    readonlyRootfs?: boolean;
    /**
     * 
     * @type {RestartPolicy}
     * @memberof HostConfig
     */
    restartPolicy?: RestartPolicy;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    runtime?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    securityOpt?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof HostConfig
     */
    shmSize?: number;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof HostConfig
     */
    storageOpt?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof HostConfig
     */
    sysctls?: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof HostConfig
     */
    tmpfs?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    uTSMode?: string;
    /**
     * 
     * @type {Array<Ulimit>}
     * @memberof HostConfig
     */
    ulimits?: Array<Ulimit>;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    usernsMode?: string;
    /**
     * 
     * @type {string}
     * @memberof HostConfig
     */
    volumeDriver?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof HostConfig
     */
    volumesFrom?: Array<string>;
}

/**
 * Check if a given object implements the HostConfig interface.
 */
export function instanceOfHostConfig(value: object): value is HostConfig {
    return true;
}

export function HostConfigFromJSON(json: any): HostConfig {
    return HostConfigFromJSONTyped(json, false);
}

export function HostConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): HostConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'annotations': json['Annotations'] == null ? undefined : json['Annotations'],
        'autoRemove': json['AutoRemove'] == null ? undefined : json['AutoRemove'],
        'binds': json['Binds'] == null ? undefined : json['Binds'],
        'blkioDeviceReadBps': json['BlkioDeviceReadBps'] == null ? undefined : ((json['BlkioDeviceReadBps'] as Array<any>).map(ThrottleDeviceFromJSON)),
        'blkioDeviceReadIOps': json['BlkioDeviceReadIOps'] == null ? undefined : ((json['BlkioDeviceReadIOps'] as Array<any>).map(ThrottleDeviceFromJSON)),
        'blkioDeviceWriteBps': json['BlkioDeviceWriteBps'] == null ? undefined : ((json['BlkioDeviceWriteBps'] as Array<any>).map(ThrottleDeviceFromJSON)),
        'blkioDeviceWriteIOps': json['BlkioDeviceWriteIOps'] == null ? undefined : ((json['BlkioDeviceWriteIOps'] as Array<any>).map(ThrottleDeviceFromJSON)),
        'blkioWeight': json['BlkioWeight'] == null ? undefined : json['BlkioWeight'],
        'blkioWeightDevice': json['BlkioWeightDevice'] == null ? undefined : ((json['BlkioWeightDevice'] as Array<any>).map(WeightDeviceFromJSON)),
        'capAdd': json['CapAdd'] == null ? undefined : json['CapAdd'],
        'capDrop': json['CapDrop'] == null ? undefined : json['CapDrop'],
        'cgroup': json['Cgroup'] == null ? undefined : json['Cgroup'],
        'cgroupParent': json['CgroupParent'] == null ? undefined : json['CgroupParent'],
        'cgroupnsMode': json['CgroupnsMode'] == null ? undefined : json['CgroupnsMode'],
        'consoleSize': json['ConsoleSize'] == null ? undefined : json['ConsoleSize'],
        'containerIDFile': json['ContainerIDFile'] == null ? undefined : json['ContainerIDFile'],
        'cpuCount': json['CpuCount'] == null ? undefined : json['CpuCount'],
        'cpuPercent': json['CpuPercent'] == null ? undefined : json['CpuPercent'],
        'cpuPeriod': json['CpuPeriod'] == null ? undefined : json['CpuPeriod'],
        'cpuQuota': json['CpuQuota'] == null ? undefined : json['CpuQuota'],
        'cpuRealtimePeriod': json['CpuRealtimePeriod'] == null ? undefined : json['CpuRealtimePeriod'],
        'cpuRealtimeRuntime': json['CpuRealtimeRuntime'] == null ? undefined : json['CpuRealtimeRuntime'],
        'cpuShares': json['CpuShares'] == null ? undefined : json['CpuShares'],
        'cpusetCpus': json['CpusetCpus'] == null ? undefined : json['CpusetCpus'],
        'cpusetMems': json['CpusetMems'] == null ? undefined : json['CpusetMems'],
        'deviceCgroupRules': json['DeviceCgroupRules'] == null ? undefined : json['DeviceCgroupRules'],
        'deviceRequests': json['DeviceRequests'] == null ? undefined : ((json['DeviceRequests'] as Array<any>).map(DeviceRequestFromJSON)),
        'devices': json['Devices'] == null ? undefined : ((json['Devices'] as Array<any>).map(DeviceMappingFromJSON)),
        'dns': json['Dns'] == null ? undefined : json['Dns'],
        'dnsOptions': json['DnsOptions'] == null ? undefined : json['DnsOptions'],
        'dnsSearch': json['DnsSearch'] == null ? undefined : json['DnsSearch'],
        'extraHosts': json['ExtraHosts'] == null ? undefined : json['ExtraHosts'],
        'groupAdd': json['GroupAdd'] == null ? undefined : json['GroupAdd'],
        'iOMaximumBandwidth': json['IOMaximumBandwidth'] == null ? undefined : json['IOMaximumBandwidth'],
        'iOMaximumIOps': json['IOMaximumIOps'] == null ? undefined : json['IOMaximumIOps'],
        'init': json['Init'] == null ? undefined : json['Init'],
        'ipcMode': json['IpcMode'] == null ? undefined : json['IpcMode'],
        'isolation': json['Isolation'] == null ? undefined : json['Isolation'],
        'kernelMemory': json['KernelMemory'] == null ? undefined : json['KernelMemory'],
        'kernelMemoryTCP': json['KernelMemoryTCP'] == null ? undefined : json['KernelMemoryTCP'],
        'links': json['Links'] == null ? undefined : json['Links'],
        'logConfig': json['LogConfig'] == null ? undefined : LogConfigFromJSON(json['LogConfig']),
        'maskedPaths': json['MaskedPaths'] == null ? undefined : json['MaskedPaths'],
        'memory': json['Memory'] == null ? undefined : json['Memory'],
        'memoryReservation': json['MemoryReservation'] == null ? undefined : json['MemoryReservation'],
        'memorySwap': json['MemorySwap'] == null ? undefined : json['MemorySwap'],
        'memorySwappiness': json['MemorySwappiness'] == null ? undefined : json['MemorySwappiness'],
        'mounts': json['Mounts'] == null ? undefined : ((json['Mounts'] as Array<any>).map(MountFromJSON)),
        'nanoCpus': json['NanoCpus'] == null ? undefined : json['NanoCpus'],
        'networkMode': json['NetworkMode'] == null ? undefined : json['NetworkMode'],
        'oomKillDisable': json['OomKillDisable'] == null ? undefined : json['OomKillDisable'],
        'oomScoreAdj': json['OomScoreAdj'] == null ? undefined : json['OomScoreAdj'],
        'pidMode': json['PidMode'] == null ? undefined : json['PidMode'],
        'pidsLimit': json['PidsLimit'] == null ? undefined : json['PidsLimit'],
        'portBindings': json['PortBindings'] == null ? undefined : json['PortBindings'],
        'privileged': json['Privileged'] == null ? undefined : json['Privileged'],
        'publishAllPorts': json['PublishAllPorts'] == null ? undefined : json['PublishAllPorts'],
        'readonlyPaths': json['ReadonlyPaths'] == null ? undefined : json['ReadonlyPaths'],
        'readonlyRootfs': json['ReadonlyRootfs'] == null ? undefined : json['ReadonlyRootfs'],
        'restartPolicy': json['RestartPolicy'] == null ? undefined : RestartPolicyFromJSON(json['RestartPolicy']),
        'runtime': json['Runtime'] == null ? undefined : json['Runtime'],
        'securityOpt': json['SecurityOpt'] == null ? undefined : json['SecurityOpt'],
        'shmSize': json['ShmSize'] == null ? undefined : json['ShmSize'],
        'storageOpt': json['StorageOpt'] == null ? undefined : json['StorageOpt'],
        'sysctls': json['Sysctls'] == null ? undefined : json['Sysctls'],
        'tmpfs': json['Tmpfs'] == null ? undefined : json['Tmpfs'],
        'uTSMode': json['UTSMode'] == null ? undefined : json['UTSMode'],
        'ulimits': json['Ulimits'] == null ? undefined : ((json['Ulimits'] as Array<any>).map(UlimitFromJSON)),
        'usernsMode': json['UsernsMode'] == null ? undefined : json['UsernsMode'],
        'volumeDriver': json['VolumeDriver'] == null ? undefined : json['VolumeDriver'],
        'volumesFrom': json['VolumesFrom'] == null ? undefined : json['VolumesFrom'],
    };
}

export function HostConfigToJSON(value?: HostConfig | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Annotations': value['annotations'],
        'AutoRemove': value['autoRemove'],
        'Binds': value['binds'],
        'BlkioDeviceReadBps': value['blkioDeviceReadBps'] == null ? undefined : ((value['blkioDeviceReadBps'] as Array<any>).map(ThrottleDeviceToJSON)),
        'BlkioDeviceReadIOps': value['blkioDeviceReadIOps'] == null ? undefined : ((value['blkioDeviceReadIOps'] as Array<any>).map(ThrottleDeviceToJSON)),
        'BlkioDeviceWriteBps': value['blkioDeviceWriteBps'] == null ? undefined : ((value['blkioDeviceWriteBps'] as Array<any>).map(ThrottleDeviceToJSON)),
        'BlkioDeviceWriteIOps': value['blkioDeviceWriteIOps'] == null ? undefined : ((value['blkioDeviceWriteIOps'] as Array<any>).map(ThrottleDeviceToJSON)),
        'BlkioWeight': value['blkioWeight'],
        'BlkioWeightDevice': value['blkioWeightDevice'] == null ? undefined : ((value['blkioWeightDevice'] as Array<any>).map(WeightDeviceToJSON)),
        'CapAdd': value['capAdd'],
        'CapDrop': value['capDrop'],
        'Cgroup': value['cgroup'],
        'CgroupParent': value['cgroupParent'],
        'CgroupnsMode': value['cgroupnsMode'],
        'ConsoleSize': value['consoleSize'],
        'ContainerIDFile': value['containerIDFile'],
        'CpuCount': value['cpuCount'],
        'CpuPercent': value['cpuPercent'],
        'CpuPeriod': value['cpuPeriod'],
        'CpuQuota': value['cpuQuota'],
        'CpuRealtimePeriod': value['cpuRealtimePeriod'],
        'CpuRealtimeRuntime': value['cpuRealtimeRuntime'],
        'CpuShares': value['cpuShares'],
        'CpusetCpus': value['cpusetCpus'],
        'CpusetMems': value['cpusetMems'],
        'DeviceCgroupRules': value['deviceCgroupRules'],
        'DeviceRequests': value['deviceRequests'] == null ? undefined : ((value['deviceRequests'] as Array<any>).map(DeviceRequestToJSON)),
        'Devices': value['devices'] == null ? undefined : ((value['devices'] as Array<any>).map(DeviceMappingToJSON)),
        'Dns': value['dns'],
        'DnsOptions': value['dnsOptions'],
        'DnsSearch': value['dnsSearch'],
        'ExtraHosts': value['extraHosts'],
        'GroupAdd': value['groupAdd'],
        'IOMaximumBandwidth': value['iOMaximumBandwidth'],
        'IOMaximumIOps': value['iOMaximumIOps'],
        'Init': value['init'],
        'IpcMode': value['ipcMode'],
        'Isolation': value['isolation'],
        'KernelMemory': value['kernelMemory'],
        'KernelMemoryTCP': value['kernelMemoryTCP'],
        'Links': value['links'],
        'LogConfig': LogConfigToJSON(value['logConfig']),
        'MaskedPaths': value['maskedPaths'],
        'Memory': value['memory'],
        'MemoryReservation': value['memoryReservation'],
        'MemorySwap': value['memorySwap'],
        'MemorySwappiness': value['memorySwappiness'],
        'Mounts': value['mounts'] == null ? undefined : ((value['mounts'] as Array<any>).map(MountToJSON)),
        'NanoCpus': value['nanoCpus'],
        'NetworkMode': value['networkMode'],
        'OomKillDisable': value['oomKillDisable'],
        'OomScoreAdj': value['oomScoreAdj'],
        'PidMode': value['pidMode'],
        'PidsLimit': value['pidsLimit'],
        'PortBindings': value['portBindings'],
        'Privileged': value['privileged'],
        'PublishAllPorts': value['publishAllPorts'],
        'ReadonlyPaths': value['readonlyPaths'],
        'ReadonlyRootfs': value['readonlyRootfs'],
        'RestartPolicy': RestartPolicyToJSON(value['restartPolicy']),
        'Runtime': value['runtime'],
        'SecurityOpt': value['securityOpt'],
        'ShmSize': value['shmSize'],
        'StorageOpt': value['storageOpt'],
        'Sysctls': value['sysctls'],
        'Tmpfs': value['tmpfs'],
        'UTSMode': value['uTSMode'],
        'Ulimits': value['ulimits'] == null ? undefined : ((value['ulimits'] as Array<any>).map(UlimitToJSON)),
        'UsernsMode': value['usernsMode'],
        'VolumeDriver': value['volumeDriver'],
        'VolumesFrom': value['volumesFrom'],
    };
}

