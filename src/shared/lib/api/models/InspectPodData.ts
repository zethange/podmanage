/* tslint:disable */
/* eslint-disable */
/**
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  \'podman info\'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  \'podman pull quay.io/containers/podman\'  curl -XPOST --unix-socket /run/podman/podman.sock -v \'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman\'  \'podman list images\'  curl --unix-socket /run/podman/podman.sock -v \'http://d/v5.0.0/libpod/images/json\' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { InspectBlkioThrottleDevice } from './InspectBlkioThrottleDevice';
import {
    InspectBlkioThrottleDeviceFromJSON,
    InspectBlkioThrottleDeviceFromJSONTyped,
    InspectBlkioThrottleDeviceToJSON,
} from './InspectBlkioThrottleDevice';
import type { InspectPodContainerInfo } from './InspectPodContainerInfo';
import {
    InspectPodContainerInfoFromJSON,
    InspectPodContainerInfoFromJSONTyped,
    InspectPodContainerInfoToJSON,
} from './InspectPodContainerInfo';
import type { InspectPodInfraConfig } from './InspectPodInfraConfig';
import {
    InspectPodInfraConfigFromJSON,
    InspectPodInfraConfigFromJSONTyped,
    InspectPodInfraConfigToJSON,
} from './InspectPodInfraConfig';
import type { InspectBlkioWeightDevice } from './InspectBlkioWeightDevice';
import {
    InspectBlkioWeightDeviceFromJSON,
    InspectBlkioWeightDeviceFromJSONTyped,
    InspectBlkioWeightDeviceToJSON,
} from './InspectBlkioWeightDevice';
import type { InspectMount } from './InspectMount';
import {
    InspectMountFromJSON,
    InspectMountFromJSONTyped,
    InspectMountToJSON,
} from './InspectMount';
import type { InspectDevice } from './InspectDevice';
import {
    InspectDeviceFromJSON,
    InspectDeviceFromJSONTyped,
    InspectDeviceToJSON,
} from './InspectDevice';

/**
 * InspectPodData contains detailed information on a pod's configuration and
 * state. It is used as the output of Inspect on pods.
 * @export
 * @interface InspectPodData
 */
export interface InspectPodData {
    /**
     * CgroupParent is the parent of the pod's Cgroup.
     * @type {string}
     * @memberof InspectPodData
     */
    cgroupParent?: string;
    /**
     * CgroupPath is the path to the pod's Cgroup.
     * @type {string}
     * @memberof InspectPodData
     */
    cgroupPath?: string;
    /**
     * Containers gives a brief summary of all containers in the pod and
     * their current status.
     * @type {Array<InspectPodContainerInfo>}
     * @memberof InspectPodData
     */
    containers?: Array<InspectPodContainerInfo>;
    /**
     * CreateCgroup is whether this pod will create its own Cgroup to group
     * containers under.
     * @type {boolean}
     * @memberof InspectPodData
     */
    createCgroup?: boolean;
    /**
     * CreateCommand is the full command plus arguments of the process the
     * container has been created with.
     * @type {Array<string>}
     * @memberof InspectPodData
     */
    createCommand?: Array<string>;
    /**
     * CreateInfra is whether this pod will create an infra container to
     * share namespaces.
     * @type {boolean}
     * @memberof InspectPodData
     */
    createInfra?: boolean;
    /**
     * Created is the time when the pod was created.
     * @type {Date}
     * @memberof InspectPodData
     */
    created?: Date;
    /**
     * ExitPolicy of the pod.
     * @type {string}
     * @memberof InspectPodData
     */
    exitPolicy?: string;
    /**
     * Hostname is the hostname that the pod will set.
     * @type {string}
     * @memberof InspectPodData
     */
    hostname?: string;
    /**
     * ID is the ID of the pod.
     * @type {string}
     * @memberof InspectPodData
     */
    id?: string;
    /**
     * 
     * @type {InspectPodInfraConfig}
     * @memberof InspectPodData
     */
    infraConfig?: InspectPodInfraConfig;
    /**
     * InfraContainerID is the ID of the pod's infra container, if one is
     * present.
     * @type {string}
     * @memberof InspectPodData
     */
    infraContainerID?: string;
    /**
     * Labels is a set of key-value labels that have been applied to the
     * pod.
     * @type {{ [key: string]: string; }}
     * @memberof InspectPodData
     */
    labels?: { [key: string]: string; };
    /**
     * Number of the pod's Libpod lock.
     * @type {number}
     * @memberof InspectPodData
     */
    lockNumber?: number;
    /**
     * Name is the name of the pod.
     * @type {string}
     * @memberof InspectPodData
     */
    name?: string;
    /**
     * Namespace is the Libpod namespace the pod is placed in.
     * @type {string}
     * @memberof InspectPodData
     */
    namespace?: string;
    /**
     * NumContainers is the number of containers in the pod, including the
     * infra container.
     * @type {number}
     * @memberof InspectPodData
     */
    numContainers?: number;
    /**
     * RestartPolicy of the pod.
     * @type {string}
     * @memberof InspectPodData
     */
    restartPolicy?: string;
    /**
     * SharedNamespaces contains a list of namespaces that will be shared by
     * containers within the pod. Can only be set if CreateInfra is true.
     * @type {Array<string>}
     * @memberof InspectPodData
     */
    sharedNamespaces?: Array<string>;
    /**
     * State represents the current state of the pod.
     * @type {string}
     * @memberof InspectPodData
     */
    state?: string;
    /**
     * BlkioWeight contains the blkio weight limit for the pod
     * @type {number}
     * @memberof InspectPodData
     */
    blkioWeight?: number;
    /**
     * BlkioWeightDevice contains the blkio weight device limits for the pod
     * @type {Array<InspectBlkioWeightDevice>}
     * @memberof InspectPodData
     */
    blkioWeightDevice?: Array<InspectBlkioWeightDevice>;
    /**
     * CPUPeriod contains the CPU period of the pod
     * @type {number}
     * @memberof InspectPodData
     */
    cpuPeriod?: number;
    /**
     * CPUQuota contains the CPU quota of the pod
     * @type {number}
     * @memberof InspectPodData
     */
    cpuQuota?: number;
    /**
     * CPUShares contains the cpu shares for the pod
     * @type {number}
     * @memberof InspectPodData
     */
    cpuShares?: number;
    /**
     * CPUSetCPUs contains linux specific CPU data for the pod
     * @type {string}
     * @memberof InspectPodData
     */
    cpusetCpus?: string;
    /**
     * CPUSetMems contains linux specific CPU data for the pod
     * @type {string}
     * @memberof InspectPodData
     */
    cpusetMems?: string;
    /**
     * BlkioDeviceReadBps contains the Read/Access limit for the pod's devices
     * @type {Array<InspectBlkioThrottleDevice>}
     * @memberof InspectPodData
     */
    deviceReadBps?: Array<InspectBlkioThrottleDevice>;
    /**
     * BlkioDeviceReadBps contains the Read/Access limit for the pod's devices
     * @type {Array<InspectBlkioThrottleDevice>}
     * @memberof InspectPodData
     */
    deviceWriteBps?: Array<InspectBlkioThrottleDevice>;
    /**
     * Devices contains the specified host devices
     * @type {Array<InspectDevice>}
     * @memberof InspectPodData
     */
    devices?: Array<InspectDevice>;
    /**
     * MemoryLimit contains the specified cgroup memory limit for the pod
     * @type {number}
     * @memberof InspectPodData
     */
    memoryLimit?: number;
    /**
     * MemorySwap contains the specified memory swap limit for the pod
     * @type {number}
     * @memberof InspectPodData
     */
    memorySwap?: number;
    /**
     * Mounts contains volume related information for the pod
     * @type {Array<InspectMount>}
     * @memberof InspectPodData
     */
    mounts?: Array<InspectMount>;
    /**
     * SecurityOpt contains the specified security labels and related SELinux information
     * @type {Array<string>}
     * @memberof InspectPodData
     */
    securityOpt?: Array<string>;
    /**
     * VolumesFrom contains the containers that the pod inherits mounts from
     * @type {Array<string>}
     * @memberof InspectPodData
     */
    volumesFrom?: Array<string>;
}

/**
 * Check if a given object implements the InspectPodData interface.
 */
export function instanceOfInspectPodData(value: object): value is InspectPodData {
    return true;
}

export function InspectPodDataFromJSON(json: any): InspectPodData {
    return InspectPodDataFromJSONTyped(json, false);
}

export function InspectPodDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): InspectPodData {
    if (json == null) {
        return json;
    }
    return {
        
        'cgroupParent': json['CgroupParent'] == null ? undefined : json['CgroupParent'],
        'cgroupPath': json['CgroupPath'] == null ? undefined : json['CgroupPath'],
        'containers': json['Containers'] == null ? undefined : ((json['Containers'] as Array<any>).map(InspectPodContainerInfoFromJSON)),
        'createCgroup': json['CreateCgroup'] == null ? undefined : json['CreateCgroup'],
        'createCommand': json['CreateCommand'] == null ? undefined : json['CreateCommand'],
        'createInfra': json['CreateInfra'] == null ? undefined : json['CreateInfra'],
        'created': json['Created'] == null ? undefined : (new Date(json['Created'])),
        'exitPolicy': json['ExitPolicy'] == null ? undefined : json['ExitPolicy'],
        'hostname': json['Hostname'] == null ? undefined : json['Hostname'],
        'id': json['Id'] == null ? undefined : json['Id'],
        'infraConfig': json['InfraConfig'] == null ? undefined : InspectPodInfraConfigFromJSON(json['InfraConfig']),
        'infraContainerID': json['InfraContainerID'] == null ? undefined : json['InfraContainerID'],
        'labels': json['Labels'] == null ? undefined : json['Labels'],
        'lockNumber': json['LockNumber'] == null ? undefined : json['LockNumber'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'namespace': json['Namespace'] == null ? undefined : json['Namespace'],
        'numContainers': json['NumContainers'] == null ? undefined : json['NumContainers'],
        'restartPolicy': json['RestartPolicy'] == null ? undefined : json['RestartPolicy'],
        'sharedNamespaces': json['SharedNamespaces'] == null ? undefined : json['SharedNamespaces'],
        'state': json['State'] == null ? undefined : json['State'],
        'blkioWeight': json['blkio_weight'] == null ? undefined : json['blkio_weight'],
        'blkioWeightDevice': json['blkio_weight_device'] == null ? undefined : ((json['blkio_weight_device'] as Array<any>).map(InspectBlkioWeightDeviceFromJSON)),
        'cpuPeriod': json['cpu_period'] == null ? undefined : json['cpu_period'],
        'cpuQuota': json['cpu_quota'] == null ? undefined : json['cpu_quota'],
        'cpuShares': json['cpu_shares'] == null ? undefined : json['cpu_shares'],
        'cpusetCpus': json['cpuset_cpus'] == null ? undefined : json['cpuset_cpus'],
        'cpusetMems': json['cpuset_mems'] == null ? undefined : json['cpuset_mems'],
        'deviceReadBps': json['device_read_bps'] == null ? undefined : ((json['device_read_bps'] as Array<any>).map(InspectBlkioThrottleDeviceFromJSON)),
        'deviceWriteBps': json['device_write_bps'] == null ? undefined : ((json['device_write_bps'] as Array<any>).map(InspectBlkioThrottleDeviceFromJSON)),
        'devices': json['devices'] == null ? undefined : ((json['devices'] as Array<any>).map(InspectDeviceFromJSON)),
        'memoryLimit': json['memory_limit'] == null ? undefined : json['memory_limit'],
        'memorySwap': json['memory_swap'] == null ? undefined : json['memory_swap'],
        'mounts': json['mounts'] == null ? undefined : ((json['mounts'] as Array<any>).map(InspectMountFromJSON)),
        'securityOpt': json['security_opt'] == null ? undefined : json['security_opt'],
        'volumesFrom': json['volumes_from'] == null ? undefined : json['volumes_from'],
    };
}

export function InspectPodDataToJSON(value?: InspectPodData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'CgroupParent': value['cgroupParent'],
        'CgroupPath': value['cgroupPath'],
        'Containers': value['containers'] == null ? undefined : ((value['containers'] as Array<any>).map(InspectPodContainerInfoToJSON)),
        'CreateCgroup': value['createCgroup'],
        'CreateCommand': value['createCommand'],
        'CreateInfra': value['createInfra'],
        'Created': value['created'] == null ? undefined : ((value['created']).toISOString()),
        'ExitPolicy': value['exitPolicy'],
        'Hostname': value['hostname'],
        'Id': value['id'],
        'InfraConfig': InspectPodInfraConfigToJSON(value['infraConfig']),
        'InfraContainerID': value['infraContainerID'],
        'Labels': value['labels'],
        'LockNumber': value['lockNumber'],
        'Name': value['name'],
        'Namespace': value['namespace'],
        'NumContainers': value['numContainers'],
        'RestartPolicy': value['restartPolicy'],
        'SharedNamespaces': value['sharedNamespaces'],
        'State': value['state'],
        'blkio_weight': value['blkioWeight'],
        'blkio_weight_device': value['blkioWeightDevice'] == null ? undefined : ((value['blkioWeightDevice'] as Array<any>).map(InspectBlkioWeightDeviceToJSON)),
        'cpu_period': value['cpuPeriod'],
        'cpu_quota': value['cpuQuota'],
        'cpu_shares': value['cpuShares'],
        'cpuset_cpus': value['cpusetCpus'],
        'cpuset_mems': value['cpusetMems'],
        'device_read_bps': value['deviceReadBps'] == null ? undefined : ((value['deviceReadBps'] as Array<any>).map(InspectBlkioThrottleDeviceToJSON)),
        'device_write_bps': value['deviceWriteBps'] == null ? undefined : ((value['deviceWriteBps'] as Array<any>).map(InspectBlkioThrottleDeviceToJSON)),
        'devices': value['devices'] == null ? undefined : ((value['devices'] as Array<any>).map(InspectDeviceToJSON)),
        'memory_limit': value['memoryLimit'],
        'memory_swap': value['memorySwap'],
        'mounts': value['mounts'] == null ? undefined : ((value['mounts'] as Array<any>).map(InspectMountToJSON)),
        'security_opt': value['securityOpt'],
        'volumes_from': value['volumesFrom'],
    };
}

