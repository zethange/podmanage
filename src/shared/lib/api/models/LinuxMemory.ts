/* tslint:disable */
/* eslint-disable */
/**
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  \'podman info\'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  \'podman pull quay.io/containers/podman\'  curl -XPOST --unix-socket /run/podman/podman.sock -v \'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman\'  \'podman list images\'  curl --unix-socket /run/podman/podman.sock -v \'http://d/v5.0.0/libpod/images/json\' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * LinuxMemory for Linux cgroup 'memory' resource management
 * @export
 * @interface LinuxMemory
 */
export interface LinuxMemory {
    /**
     * CheckBeforeUpdate enables checking if a new memory limit is lower
     * than the current usage during update, and if so, rejecting the new
     * limit.
     * @type {boolean}
     * @memberof LinuxMemory
     */
    checkBeforeUpdate?: boolean;
    /**
     * DisableOOMKiller disables the OOM killer for out of memory conditions
     * @type {boolean}
     * @memberof LinuxMemory
     */
    disableOOMKiller?: boolean;
    /**
     * Kernel memory limit (in bytes).
     * 
     * Deprecated: kernel-memory limits are not supported in cgroups v2, and
     * were obsoleted in [kernel v5.4]. This field should no longer be used,
     * as it may be ignored by runtimes.
     * 
     * [kernel v5.4]: https://github.com/torvalds/linux/commit/0158115f702b0ba208ab0
     * @type {number}
     * @memberof LinuxMemory
     */
    kernel?: number;
    /**
     * Kernel memory limit for tcp (in bytes)
     * @type {number}
     * @memberof LinuxMemory
     */
    kernelTCP?: number;
    /**
     * Memory limit (in bytes).
     * @type {number}
     * @memberof LinuxMemory
     */
    limit?: number;
    /**
     * Memory reservation or soft_limit (in bytes).
     * @type {number}
     * @memberof LinuxMemory
     */
    reservation?: number;
    /**
     * Total memory limit (memory + swap).
     * @type {number}
     * @memberof LinuxMemory
     */
    swap?: number;
    /**
     * How aggressive the kernel will swap memory pages.
     * @type {number}
     * @memberof LinuxMemory
     */
    swappiness?: number;
    /**
     * Enables hierarchical memory accounting
     * @type {boolean}
     * @memberof LinuxMemory
     */
    useHierarchy?: boolean;
}

/**
 * Check if a given object implements the LinuxMemory interface.
 */
export function instanceOfLinuxMemory(value: object): value is LinuxMemory {
    return true;
}

export function LinuxMemoryFromJSON(json: any): LinuxMemory {
    return LinuxMemoryFromJSONTyped(json, false);
}

export function LinuxMemoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinuxMemory {
    if (json == null) {
        return json;
    }
    return {
        
        'checkBeforeUpdate': json['checkBeforeUpdate'] == null ? undefined : json['checkBeforeUpdate'],
        'disableOOMKiller': json['disableOOMKiller'] == null ? undefined : json['disableOOMKiller'],
        'kernel': json['kernel'] == null ? undefined : json['kernel'],
        'kernelTCP': json['kernelTCP'] == null ? undefined : json['kernelTCP'],
        'limit': json['limit'] == null ? undefined : json['limit'],
        'reservation': json['reservation'] == null ? undefined : json['reservation'],
        'swap': json['swap'] == null ? undefined : json['swap'],
        'swappiness': json['swappiness'] == null ? undefined : json['swappiness'],
        'useHierarchy': json['useHierarchy'] == null ? undefined : json['useHierarchy'],
    };
}

export function LinuxMemoryToJSON(value?: LinuxMemory | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'checkBeforeUpdate': value['checkBeforeUpdate'],
        'disableOOMKiller': value['disableOOMKiller'],
        'kernel': value['kernel'],
        'kernelTCP': value['kernelTCP'],
        'limit': value['limit'],
        'reservation': value['reservation'],
        'swap': value['swap'],
        'swappiness': value['swappiness'],
        'useHierarchy': value['useHierarchy'],
    };
}

