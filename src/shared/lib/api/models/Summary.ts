/* tslint:disable */
/* eslint-disable */
/**
 * supports a RESTful API for the Libpod library
 * This documentation describes the Podman v2.x+ RESTful API. It consists of a Docker-compatible API and a Libpod API providing support for Podmanâ€™s unique features such as pods.  To start the service and keep it running for 5,000 seconds (-t 0 runs forever):  podman system service -t 5000 &  You can then use cURL on the socket using requests documented below.  NOTE: if you install the package podman-docker, it will create a symbolic link for /run/docker.sock to /run/podman/podman.sock  NOTE: Some fields in the API response JSON are encoded as omitempty, which means that if said field has a zero value, they will not be encoded in the API response. This is a feature to help reduce the size of the JSON responses returned via the API.  NOTE: Due to the limitations of [go-swagger](https://github.com/go-swagger/go-swagger), some field values that have a complex type show up as null in the docs as well as in the API responses. This is because the zero value for the field type is null. The field description in the docs will state what type the field is expected to be for such cases.  See podman-system-service(1) for more information.  Quick Examples:  \'podman info\'  curl --unix-socket /run/podman/podman.sock http://d/v5.0.0/libpod/info  \'podman pull quay.io/containers/podman\'  curl -XPOST --unix-socket /run/podman/podman.sock -v \'http://d/v5.0.0/images/create?fromImage=quay.io%2Fcontainers%2Fpodman\'  \'podman list images\'  curl --unix-socket /run/podman/podman.sock -v \'http://d/v5.0.0/libpod/images/json\' | jq
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: podman@lists.podman.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Summary summary
 * @export
 * @interface Summary
 */
export interface Summary {
    /**
     * Number of containers using this image. Includes both stopped and running
     * containers.
     * 
     * This size is not calculated by default, and depends on which API endpoint
     * is used. `-1` indicates that the value has not been set / calculated.
     * @type {number}
     * @memberof Summary
     */
    containers: number;
    /**
     * Date and time at which the image was created as a Unix timestamp
     * (number of seconds sinds EPOCH).
     * @type {number}
     * @memberof Summary
     */
    created: number;
    /**
     * ID is the content-addressable ID of an image.
     * 
     * This identifier is a content-addressable digest calculated from the
     * image's configuration (which includes the digests of layers used by
     * the image).
     * 
     * Note that this digest differs from the `RepoDigests` below, which
     * holds digests of image manifests that reference the image.
     * @type {string}
     * @memberof Summary
     */
    id: string;
    /**
     * User-defined key/value metadata.
     * @type {{ [key: string]: string; }}
     * @memberof Summary
     */
    labels: { [key: string]: string; };
    /**
     * ID of the parent image.
     * 
     * Depending on how the image was created, this field may be empty and
     * is only set for images that were built/created locally. This field
     * is empty if the image was pulled from an image registry.
     * @type {string}
     * @memberof Summary
     */
    parentId: string;
    /**
     * List of content-addressable digests of locally available image manifests
     * that the image is referenced from. Multiple manifests can refer to the
     * same image.
     * 
     * These digests are usually only available if the image was either pulled
     * from a registry, or if the image was pushed to a registry, which is when
     * the manifest is generated and its digest calculated.
     * @type {Array<string>}
     * @memberof Summary
     */
    repoDigests: Array<string>;
    /**
     * List of image names/tags in the local image cache that reference this
     * image.
     * 
     * Multiple image tags can refer to the same image, and this list may be
     * empty if no tags reference the image, in which case the image is
     * "untagged", in which case it can still be referenced by its ID.
     * @type {Array<string>}
     * @memberof Summary
     */
    repoTags: Array<string>;
    /**
     * Total size of image layers that are shared between this image and other
     * images.
     * 
     * This size is not calculated by default. `-1` indicates that the value
     * has not been set / calculated.
     * @type {number}
     * @memberof Summary
     */
    sharedSize: number;
    /**
     * Total size of the image including all layers it is composed of.
     * @type {number}
     * @memberof Summary
     */
    size: number;
    /**
     * Total size of the image including all layers it is composed of.
     * 
     * Deprecated: this field is omitted in API v1.44, but kept for backward compatibility. Use Size instead.
     * @type {number}
     * @memberof Summary
     */
    virtualSize?: number;
}

/**
 * Check if a given object implements the Summary interface.
 */
export function instanceOfSummary(value: object): value is Summary {
    if (!('containers' in value) || value['containers'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('labels' in value) || value['labels'] === undefined) return false;
    if (!('parentId' in value) || value['parentId'] === undefined) return false;
    if (!('repoDigests' in value) || value['repoDigests'] === undefined) return false;
    if (!('repoTags' in value) || value['repoTags'] === undefined) return false;
    if (!('sharedSize' in value) || value['sharedSize'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    return true;
}

export function SummaryFromJSON(json: any): Summary {
    return SummaryFromJSONTyped(json, false);
}

export function SummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Summary {
    if (json == null) {
        return json;
    }
    return {
        
        'containers': json['Containers'],
        'created': json['Created'],
        'id': json['Id'],
        'labels': json['Labels'],
        'parentId': json['ParentId'],
        'repoDigests': json['RepoDigests'],
        'repoTags': json['RepoTags'],
        'sharedSize': json['SharedSize'],
        'size': json['Size'],
        'virtualSize': json['VirtualSize'] == null ? undefined : json['VirtualSize'],
    };
}

export function SummaryToJSON(value?: Summary | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Containers': value['containers'],
        'Created': value['created'],
        'Id': value['id'],
        'Labels': value['labels'],
        'ParentId': value['parentId'],
        'RepoDigests': value['repoDigests'],
        'RepoTags': value['repoTags'],
        'SharedSize': value['sharedSize'],
        'Size': value['size'],
        'VirtualSize': value['virtualSize'],
    };
}

